<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://cdn.tailwindcss.com"></script>
    <title>Chat Bot</title>
    <style>
        /* Style for fixed chatbox */
        .fixed-bottom {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 9999;
            transition: transform 0.3s ease-in-out;
            transform: translateY(0%);
        }

        .chatbox-scroll {
            height: calc(100vh - 150px); /* Adjust the height as needed */
            overflow-y: auto;
        }

        /* Adjust the padding to keep the chatbox visible */
        .chatbox-padding {
            padding-bottom: 100px; /* Adjust as needed */
        }

        /* Max-width for chat response content */
        .chat-content {
            max-width: 100%; /* Adjust as needed */
            padding: 20px;
            margin-bottom: 20px;
        }

        /* Ensure content stays within gray box */
        .bg-gray-200 {
            width: 100%;
            box-sizing: border-box;
            padding: 20px;
            margin-bottom: 20px;
        }
        pre {
            font-size: 20px;
            width: 100%;
            padding: 14px;
            white-space: pre-wrap; /* Enable word wrapping */
            overflow-wrap: break-word; /* Fallback for older browsers */
        }
    </style>
</head>
<body class="bg-gray-100">
    <div class="container mx-auto py-8">
        <!-- Chat History Container -->
        <div class="flex flex-col space-y-4 chatbox-scroll" id="chatHistoryContainer">
            <!-- Chat history will be dynamically added here -->
        </div>
    </div>

    <!-- Chat Input Form (fixed at the bottom) -->
    <form id="chatForm" class="fixed-bottom bg-white w-full p-4">
        <input type="text" id="messageInput" name="message" placeholder="Enter your message" class="w-full px-4 py-2 rounded-md border border-gray-300 focus:outline-none focus:border-blue-500">
        <button type="submit" class="mt-2 px-4 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 focus:outline-none focus:bg-blue-600">Send</button>
    </form>

    <script>
        // Function to update the chat history
        function updateChatHistory(data) {
            const chatHistoryContainer = document.getElementById('chatHistoryContainer');

            // Create a new chat message element for the user's input
            const userMessageElement = document.createElement('div');
            userMessageElement.classList.add('flex', 'items-start');
            userMessageElement.innerHTML = `<div class="bg-blue-100 p-2 rounded-md"><p class="text-blue-800">${data.userInput}</p></div>`;
            chatHistoryContainer.appendChild(userMessageElement);

            // Create a new chat message element for the AI's response
            const aiMessageElement = document.createElement('div');
            aiMessageElement.classList.add('flex', 'items-start');
            const content = data.containsCode ? `<pre>${data.response}</pre>` : data.response;
            const contentWrapper = `<div class="bg-gray-200 p-2 rounded-md chat-content">${content}</div>`; // Wrap content in a div with max-width
            aiMessageElement.innerHTML = contentWrapper;
            chatHistoryContainer.appendChild(aiMessageElement);

            // Scroll to bottom of chat history container
            chatHistoryContainer.scrollTop = chatHistoryContainer.scrollHeight;
        }

        // Event listener for form submission
        document.getElementById('chatForm').addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent default form submission

            const userInput = document.getElementById('messageInput').value.trim();
            if (!userInput) return; // Do nothing if message is empty

            try {
                // Send user input to server
                const response = await fetch('/send-chat', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ userInput })
                });

                // If the request was successful, update the chat history
                if (response.ok) {
                    const responseData = await response.json();
                    updateChatHistory(responseData);
                } else {
                    console.error('Error sending message');
                }
            } catch (error) {
                console.error('Error sending message:', error);
            }

            // Clear the input field
            document.getElementById('messageInput').value = '';
        });
    </script>
</body>
</html>
